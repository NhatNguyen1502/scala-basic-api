openapi: 3.0.3
info:
  title: "User API"
  description: "API for managing users"
  version: "1.0.0"

servers:
  - url: /

tags:
  - name: User
  - name: Auth

paths:
  /api/login:
    post:
      tags:
        - Auth
      summary: User login to get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestDto"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  /api/users:
    get:
      tags:
        - User
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequestDto"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  /api/users/{id}:
    get:
      tags:
        - User
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
    put:
      tags:
        - User
      summary: Update an existing user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequestDto"
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
    delete:
      tags:
        - User
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequestDto:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    CreateUserRequestDto:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
        age:
          type: integer
          format: int32
          nullable: true

    UpdateUserRequestDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
        isActive:
          type: boolean
          nullable: true

    FieldError:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
          nullable: true

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
        errors:
          type: array
          items:
            $ref: "#/components/schemas/FieldError"

security:
  - bearerAuth: []
