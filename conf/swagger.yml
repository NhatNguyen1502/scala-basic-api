swagger: "2.0"
info:
  title: "User API"
  description: "API for managing users"
  version: "1.0.0"

consumes:
  - application/json
produces:
  - application/json

paths:
  /api/users:
    get:
      tags:
        - User
      summary: Get all users
      responses:
        200:
          description: List of users
          schema:
            $ref: "#/definitions/ApiResponse"
    post:
      tags:
        - User
      summary: Create a new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequestDto"
      responses:
        201:
          description: User created successfully
          schema:
            $ref: "#/definitions/ApiResponse"

  /api/users/{id}:
    get:
      tags:
        - User
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - User
      summary: Update an existing user
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUserRequestDto"
      responses:
        200:
          description: User updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
    delete:
      tags:
        - User
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: User deleted successfully
          schema:
            $ref: "#/definitions/ApiResponse"

definitions:
  CreateUserRequestDto:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
      age:
        type: integer
        format: int32
        nullable: true

  UpdateUserRequestDto:
    type: object
    properties:
      age:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
      isActive:
        type: boolean
        nullable: true

  FieldError:
    type: object
    properties:
      field:
        type: string
      message:
        type: string
        nullable: true

  ApiResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      data:
        type: object
      errors:
        type: array
        items:
          $ref: "#/definitions/FieldError"
